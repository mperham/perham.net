<?php
/*
 * $RCSfile: NewAlbumControllerTest.class,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2006 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */
/**
 * @version $Revision: 1.6 $ $Date: 2006/01/10 04:41:41 $
 * @package PublishXP
 * @subpackage PHPUnit
 * @author Bharat Mediratta <bharat@menalto.com>
 */

/**
 * NewAlbum controller tests
 * @package PublishXP
 * @subpackage PHPUnit
 */
class NewAlbumControllerTest extends GalleryControllerTestCase {

    function NewAlbumControllerTest($methodName) {
	$this->GalleryControllerTestCase($methodName, 'publishxp.NewAlbum');
    }

    function testNewAlbum() {
	GalleryUtilities::putRequestVariable('form[parentId]', $this->_getRootId());
	GalleryUtilities::putRequestVariable(
	    'form[pathComponent]', $pathComponent = 'test-' . rand(1000, 9999));
	GalleryUtilities::putRequestVariable('form[title]', 'test title');
	GalleryUtilities::putRequestVariable('form[summary]', 'test summary');
	GalleryUtilities::putRequestVariable('form[description]', 'test description');
	GalleryUtilities::putRequestVariable('form[action][newAlbum]', 1);

	$results = $this->handleRequest();
	$entityCounter =& GalleryTestCase::getEntityCounter();
	$albumId = $entityCounter->getRecentEntityId('GalleryAlbumItem');
	$this->assertEquals(array('redirect' => array('view' => 'publishxp.SelectAlbum',
						      'albumId' => $albumId),
				  'status' => array(),
				  'error' => array()),
			    $results);

	list ($ret, $album) = GalleryCoreApi::loadEntitiesById($albumId);
	if ($ret) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	
	$this->assertEquals($this->_getRootId(), $album->getParentId());
	$this->assertEquals($pathComponent, $album->getPathComponent());
	$this->assertEquals('test title', $album->getTitle());
	$this->assertEquals('test summary', $album->getSummary());
	$this->assertEquals('test description', $album->getDescription());
	$this->assertEquals(null, $album->getKeywords());
	
	$ret = GalleryCoreApi::deleteEntityById($albumId);
	if ($ret) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
    }

    function testNewAlbumInvalidPathComponent() {
	GalleryUtilities::putRequestVariable('form[parentId]', $this->_getRootId());
	GalleryUtilities::putRequestVariable('form[pathComponent]', '@!INVALID!@');
	GalleryUtilities::putRequestVariable('form[title]', 'test title');
	GalleryUtilities::putRequestVariable('form[summary]', 'test summary');
	GalleryUtilities::putRequestVariable('form[description]', 'test description');
	GalleryUtilities::putRequestVariable('form[action][newAlbum]', 1);

	$results = $this->handleRequest();
	$this->assertEquals(array('delegate' => array('view' => 'publishxp.NewAlbum'),
				  'status' => array(),
				  'error' => array('form[error][pathComponent][invalid]')),
			    $results);
    }

    function testNewAlbumMissingElements() {
	GalleryUtilities::putRequestVariable('form[action][newAlbum]', 1);

	$results = $this->handleRequest();
	$this->assertEquals(array('delegate' => array('view' => 'publishxp.NewAlbum'),
				  'status' => array(),
				  'error' => array(
				      'form[error][pathComponent][missing]',
				      'form[error][title][missing]')),
			    $results);
    }

    function testNewAlbumBogusParentId() {
	GalleryUtilities::putRequestVariable('form[parentId]', 0);
	GalleryUtilities::putRequestVariable('form[pathComponent]', 'test-' . rand(1000, 9999));
	GalleryUtilities::putRequestVariable('form[title]', 'test title');
	GalleryUtilities::putRequestVariable('form[summary]', 'test summary');
	GalleryUtilities::putRequestVariable('form[description]', 'test description');
	GalleryUtilities::putRequestVariable('form[action][newAlbum]', 1);

	/* We don't allow this via the UI, so a system error is acceptable */
	$results = $this->handleRequest(ERROR_BAD_PARAMETER);
    }
}
?>
